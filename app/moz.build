# -*- Mode: python; c-basic-offset: 4; indent-tabs-mode: nil; tab-width: 40 -*-
# vim: set filetype=python:
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.

#DIRS += ['profile/extensions']

# DIRS += ["icons"]

GeckoProgram(CONFIG['MOZ_APP_NAME'])

SOURCES += [
    'nsEditorApp.cpp',
]

LOCAL_INCLUDES += [
    '!/build',
    "/ipc/contentproc/",
    '/toolkit/xre',
    '/xpcom/base',
    '/xpcom/build',
]

if CONFIG['OS_ARCH'] == 'WINNT':
    RCINCLUDE = 'splash.rc'
    DEFINES['MOZ_PHOENIX'] = True

if CONFIG["CC_TYPE"] in ("msvc", "clang-cl"):
    # Always enter a Windows program through wmain, whether or not we're
    # a console application.
    WIN32_EXE_LDFLAGS += ["-ENTRY:wmainCRTStartup"]

if CONFIG["MOZ_SANDBOX"] and CONFIG["OS_ARCH"] == "Darwin":
    USE_LIBS += [
        "mozsandbox",
    ]

if CONFIG["OS_ARCH"] == "Darwin":
    # This stops errors like the following:
    # ld64.lld: error: undefined symbol: _CFRelease
    #
    # Seamonkey puts this with mozsandbox, so I might have misconfigured
    # something elsewhere
    OS_LIBS += [
        "-framework CoreFoundation",
    ]

if CONFIG["MOZ_SANDBOX"] and CONFIG["OS_ARCH"] == "WINNT":
    # For sandbox includes and the include dependencies those have
    LOCAL_INCLUDES += [
        "/security/sandbox/chromium",
        "/security/sandbox/chromium-shim",
    ]

    OS_LIBS += [
        "version",
    ]

    USE_LIBS += [
        "sandbox_s",
    ]

    OS_LIBS += [
        "advapi32",
        "winmm",
        "user32",
    ]

    DELAYLOAD_DLLS += [
        "winmm.dll",
        "user32.dll",
    ]

if CONFIG["OS_ARCH"] == "WINNT":
    OS_LIBS += [
        "ntdll",
    ]

    if CONFIG["CC_TYPE"] == "msvc":
        CFLAGS += ["-guard:cf"]
        CXXFLAGS += ["-guard:cf"]
        LDFLAGS += ["-guard:cf"]

#FINAL_TARGET_FILES += ['blocklist.xml']
FINAL_TARGET_FILES.defaults.profile += ['profile/prefs.js']

DEFINES['APP_VERSION'] = CONFIG['MOZ_APP_VERSION']

for var in ('MOZILLA_OFFICIAL', 'LIBXUL_SDK'):
    if CONFIG[var]:
        DEFINES[var] = True

if not CONFIG['MOZ_METRO']:
    DELAYLOAD_DLLS += [
        'mozglue.dll',
    ]

USE_LIBS += [
    'mozglue',
]

if CONFIG['_MSC_VER']:
    # Always enter a Windows program through wmain, whether or not we're
    # a console application.
    WIN32_EXE_LDFLAGS += ['-ENTRY:wmainCRTStartup']

# Control the default heap size.
# This is the heap returned by GetProcessHeap().
# As we use the CRT heap, the default size is too large and wastes VM.
#
# The default heap size is 1MB on Win32.
# The heap will grow if need be.
#
# Set it to 256k.  See bug 127069.
if CONFIG['OS_ARCH'] == 'WINNT' and not CONFIG['GNU_CC']:
    LDFLAGS += ['/HEAP:0x40000']

DisableStlWrapping()

if CONFIG['MOZ_LINKER']:
    OS_LIBS += CONFIG['MOZ_ZLIB_LIBS']

if CONFIG['HAVE_CLOCK_MONOTONIC']:
    OS_LIBS += CONFIG['REALTIME_LIBS']

#JAR_MANIFESTS += ['jar.mn']

#FAIL_ON_WARNINGS = True

JS_PREFERENCE_FILES += [
    'profile/bluegriffon-prefs.js',
]

if CONFIG['LIBXUL_SDK']:
    PREF_JS_EXPORTS += [
        'profile/channel-prefs.js',
    ]
